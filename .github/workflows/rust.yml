name: Build & Test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # Setup
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly-2024-05-02
          target: wasm32-unknown-unknown
          components: rustfmt, clippy
          
      # Dependencies
      - name: Install dependencies
        run: sudo apt install libdbus-1-dev pkg-config libudev-dev libasound2-dev

      # Rust
      # - name: Check Rust format
      #   run: rustfmt --edition 2021 --check src/main.rs
      # - name: Rust code analysis
      #   run: cargo clippy -- -D warnings
      # - name: Run Rust tests
      #   run: cargo test
      
      # - name: Build (Linux)
      #   run: cargo build -r
      
      - name: Build (WASM)
        run: |
          rm -rf ./wasm-build
          cargo install wasm-bindgen-cli --vers 0.2.92
          cargo install wasm-opt --vers 0.116.1
          cargo build --profile release-wasm --target wasm32-unknown-unknown
          wasm-bindgen --no-typescript --out-dir ./wasm-build --target web ./target/wasm32-unknown-unknown/release-wasm/bevy-texture-coloring-example.wasm
          wasm-opt -Oz -o ./wasm-build/bevy-texture-coloring-example_bg.wasm ./wasm-build/bevy-texture-coloring-example_bg.wasm
          cp -f index.html ./wasm-build
          cp -rf assets ./wasm-build
      
      - name: Archive WASM build (pages) artifacts
        working-directory: ./wasm-build
        run: tar --dereference -cvf "${{ runner.temp }}/wasm-build.tar" .
    
      - name: Upload WASM build (pages) artifacts
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: ${{ runner.temp }}/wasm-build.tar
          retention-days: 7
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment 
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
 